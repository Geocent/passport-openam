'use strict';

var util = require('util');

/**
 * `InternalOpenAmError` error.
 *
 * InternalOpenAmError wraps errors generated by node-openam.  By wrapping these
 * objects, error messages can be formatted in a manner that aids in debugging
 * OpenAm issues.
 *
 * @api public
 */
function InternalOpenAmError(message, err) {
  Error.call(this);
  this.name = 'InternalOpenAmError';

  this.message = message;
  this.openAmError = err;
}

/**
 * Inherit from `Error`.
 */
util.inherits(InternalOpenAmError, Error);

/**
 * Returns a string representing the error.
 *
 * @return {String}
 * @api public
 */
InternalOpenAmError.prototype.toString = function () {
  if (this.openAmError) {
    if (this.openAmError instanceof Error) {
      return util.format('%s (%s)', this.message, this.openAmError);
    }
    else if (this.openAmError.statusCode && this.openAmError.data) {
      return util.format('%s (status: %s data: %s)', this.message, this.openAmError.statusCode, this.openAmError.data);
    }
  }
  else {
    return this.message;
  }
};

module.exports = InternalOpenAmError;
